# Generated by Django 5.0.4 on 2024-10-01 17:52

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("core", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Account",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        help_text="Unique email address",
                        max_length=255,
                        unique=True,
                        verbose_name="Email",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        help_text="Unique username associated with the account",
                        max_length=16,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                code="invalid_username",
                                message='Username must be alphanumeric or contain any of the following: "_"',
                                regex="^[a-zA-Z0-9_]*$",
                            ),
                            django.core.validators.MinLengthValidator(
                                limit_value=4,
                                message="Username must be at least 4 characters long",
                            ),
                        ],
                        verbose_name="Username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True,
                        help_text="First name of the user",
                        max_length=120,
                        verbose_name="First name",
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True,
                        help_text="Last name of the user",
                        max_length=120,
                        verbose_name="Last name",
                    ),
                ),
                (
                    "bio",
                    models.TextField(
                        blank=True,
                        help_text="User bio",
                        max_length=1000,
                        verbose_name="Bio",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active",
                        verbose_name="Active",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site",
                        verbose_name="Staff status",
                    ),
                ),
                (
                    "is_admin",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site",
                        verbose_name="Admin status",
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them",
                        verbose_name="Superuser status",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for the account",
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "date_created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Server date and time the account was created",
                        verbose_name="Date created",
                    ),
                ),
                (
                    "date_last_logged_in",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Server date and time the account last logged in",
                        verbose_name="Date last logged in",
                    ),
                ),
                (
                    "country",
                    models.ForeignKey(
                        blank=True,
                        help_text="Country of the user",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.country",
                        verbose_name="Country",
                    ),
                ),
            ],
            options={
                "verbose_name": "Account",
                "verbose_name_plural": "Accounts",
                "ordering": ["-date_created"],
            },
        ),
    ]
